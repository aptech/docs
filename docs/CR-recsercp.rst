
recsercp
==============================================

Purpose
----------------

Computes a recursive series involving products. Can be used to compute cumulative products, to evaluate polynomials using
Horner's rule, and to convert from base  b representations of numbers to decimal representations among other things.

Format
----------------
.. function:: recsercp(x, z)

    :param x: 
    :type x: NxK or 1xK matrix

    :param z: 
    :type z: NxK or 1xK matrix

    :returns: y (*TODO*), NxK matrix in which each column is a series generated by a recursion of the form:
        y(1) = x(1) + z(1)y(t) = y(t - 1) * x(t) + z(t), t=2,...N

Examples
----------------

::

    c1 = c[1,.];
    n = rows(c) - 1;
    y = recsercp(x, trimr(c ./ c1,1,0));
    p = c1 .* y[n,.];

If x is a scalar and c is an (N+1)x1
vector, the result p will contain the value of the
polynomial whose coefficients are given in c. That is:

::

    p = c[1,.].*x^n + c[2,.].*x^(n-1) + ... + c[n+1,.];

Note that both x and c could contain more
than 1 column, and then this code would evaluate the entire set of
polynomials at the same time. Note also that if x = 2,
and if c contains the digits of the binary representation
of a number, then p will be the decimal representation
of that number.

.. seealso:: Functions :func:`recserar`, :func:`recserrc`, :func:`recserVAR`
