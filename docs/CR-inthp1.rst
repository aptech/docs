
inthp1
==============================================

Purpose
----------------

Integrates a user-defined function over an infinite interval.

Format
----------------
.. function:: inthp1(&f, pds, ctl)

    :param &f: pointer to the procedure containing the function to be integrated.
    :type &f: scalar

    :param pds: pointer to instance of a DS structure. The members of the DS are:
    :type pds: scalar

    .. csv-table::
        :widths: auto

        "pds->dataMatrix", "NxK matrix."
        "pds->dataArray", "NxKxL... array."
        "pds->vnames", "string array."
        "pds->dsname", "string."
        "pds->type", "scalar."
        "The contents, if any, are set by the user and are passed by inthp1 to the user-provided function without modification."

    :param ctl: 
    :type ctl: instance of an inthpControl structure with members

    .. csv-table::
        :widths: auto

        "ctl.maxEvaluations", "scalar, maximum number of function evaluations, default = 1e5;"
        "ctl.p", "scalar, termination parameter"
        "", "0", "heuristic termination, default."
        "", "1", "deterministic termination with infinity norm."
        "", "2,...", "deterministic termination with p-th norm."
        "ctl.d", "scalar termination parameter"
        "", "1", "if heuristic termination"
        "", "0 < ctl.d < π/2", "if deterministic termination"
        "ctl.eps", "scalar, relative error bound. Default = 1e-6."
        "A default ctl can be generated by calling inthpControlCreate."

    :returns: y (*scalar*), the estimated integral of f(x) evaluated over the interval (-∞,+∞).

Examples
----------------

::

    proc fct(struct DS *pds, x);
    local var;
       var = pds->dataMatrix;
    retp( exp( -(x*x) / (2*var) ));
    endp;
    
    struct DS d0;
    struct DS *pds;
    variance = 3;
    pds = &d0;
    d0.dataMatrix = variance;
    
    struct inthpControl c0;
    c0 = inthpControlCreate;
    
    r = inthp1(&fct,pds,c0);
    
    format /ld 16,10;
    print r;
    print sqrt(2*pi*variance);

results in the following output:

::

    4.3416075273 
     4.3416075273

References
++++++++++

#. ''Optimal Quadratures in H_p Spaces'' by K. Sikorski and F. Stenger,
   ACM Transactions on Mathematical Software, 10(2):140-151, June 1984.

Source
++++++

inthp.src

.. seealso:: Functions :func:`inthpControlCreate`, :func:`inthp2`, :func:`inthp3`, :func:`inthp4`

intergrate infinite interval
